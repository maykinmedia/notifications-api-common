# Generated by Django 3.2.14 on 2022-07-11 15:10

from urllib.parse import urlsplit, urlunsplit

from django.db import migrations
from django.db.models.functions import Length

from zgw_consumers.constants import APITypes


# Local copy of zgw_consumers.Service.get_service
def get_service(Service, url: str):
    split_url = urlsplit(url)
    scheme_and_domain = urlunsplit(split_url[:2] + ("", "", ""))

    candidates = (
        Service.objects.filter(api_root__startswith=scheme_and_domain)
        .annotate(api_root_length=Length("api_root"))
        .order_by("-api_root_length")
    )

    # select the one matching
    for candidate in candidates.iterator():
        if url.startswith(candidate.api_root):
            return candidate

    return None


def migrate_notifications_config_forwards(apps, _):
    NotificationsConfig = apps.get_model("notifications_api_common.NotificationsConfig")
    Service = apps.get_model("zgw_consumers.Service")

    config, _ = NotificationsConfig.objects.get_or_create()

    direct_match = get_service(Service, config.api_root)
    if direct_match:
        config.notifications_api_service = Service.objects.get(pk=direct_match.pk)
    else:
        service = Service.objects.filter(api_type=APITypes.nrc).first()
        config.notifications_api_service = service
    config.save()


def migrate_notifications_config_backwards(apps, _):
    NotificationsConfig = apps.get_model("notifications_api_common.NotificationsConfig")

    config, _ = NotificationsConfig.objects.get_or_create()
    config.api_root = getattr(config.notifications_api_service, "api_root", "")


class Migration(migrations.Migration):
    dependencies = [
        (
            "notifications_api_common",
            "0002_notificationsconfig_notifications_api_service",
        ),
    ]

    operations = [
        migrations.RunPython(
            migrate_notifications_config_forwards,
            migrate_notifications_config_backwards,
        )
    ]
